{"version":3,"sources":["assets/slide5.jpg","assets/slide1.jpg","assets/slide2.jpg","assets/slide3.jpg","assets/slide4.jpg","Slide.js","Spacer.js","Dot.js","Dots.js","Slideshow.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","s","memo","_ref","position","transition","image","react_default","a","createElement","className","src","alt","w","h","style","width","height","slideId","dotId","src_Spacer","slides","map","slide","id","src_Dot","key","container","onScreen","offScreenRight","offScreenLeft","Slideshow","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","startCarousel","carouselInterval","setInterval","transitionSlides","setSlideState","slide1","slide2","currentId","setState","_this$state","state","setTimeout","resetSlideOffScreen","_this$state2","length","resetSlideTransitions","clearInterval","_this$state3","src_Slide","src_Dots","Component","text2png","color","slide5","App","src_Slideshow","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.55b29957.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/slide5.869caaa3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide1.11f6cfcb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide2.c529a353.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide3.3f5aeab6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide4.a799fb4f.jpg\";","//===========================================\n// IMPORT DEPENDENCIES\n//===========================================\nimport React, { memo } from \"react\";\n\n//===========================================\n// STYLES OBJECT\n//===========================================\nconst s = {\n    container: \"abs fullW fullH\",\n    slideImage: \"fullH fullW imgCover\"\n};\n\n//===========================================\n// SLIDE FUNCTIONAL COMPONENT\n//===========================================\nconst Slide = ({ position, transition, image }) => {\n    return (\n        <div className={s.container + \" \" + position + \" \" + transition}>\n            <img src={image} className={s.slideImage} alt=\"slide\" />\n        </div>\n    );\n};\n\nexport default memo(Slide);\n","//===========================================\n// IMPORT DEPENDENCIES\n//===========================================\nimport React, { memo } from \"react\";\n\n//===========================================\n// SPACER FUNCTIONAL COMPONENT\n//===========================================\nconst Spacer = ({ w, h }) => {\n    if (w) {\n        return <div style={{ width: w }} className=\"fullH\" />;\n    } else if (h) {\n        return <div style={{ height: h }} className=\"fullW\" />;\n    }\n};\n\nexport default memo(Spacer);\n","//===========================================\n// IMPORT DEPENDENCIES\n//===========================================\nimport React, { memo } from \"react\";\nimport Spacer from \"./Spacer\";\n\n//===========================================\n// DOT FUNCTIONAL COMPONENT\n//===========================================\nconst Dot = ({ slideId, dotId }) => (\n    <div className=\"row\">\n        <Spacer w={5} />\n        <div className={\"dot \" + (slideId === dotId ? \"white\" : \"white50\")} />\n        <Spacer w={5} />\n    </div>\n);\n\nexport default memo(Dot);\n","//===========================================\n// IMPORT DEPENDENCIES\n//===========================================\nimport React, { memo } from \"react\";\nimport Dot from \"./Dot\";\n\n//===========================================\n// STYLE OBJECT\n//===========================================\nconst s = {\n    container: \"fullW height70 abs bot0 fCenter black50\"\n};\n\n//===========================================\n// DOTS FUNCTIONAL COMPONENT\n//===========================================\nconst Dots = ({ slideId, slides }) => {\n    return (\n        <div className={s.container}>\n            <div className=\"row\">\n                {slides.map((slide, id) => (\n                    <Dot slideId={slideId} dotId={id} key={id} />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default memo(Dots);\n","//===========================================\n// IMPORT DEPENDENCIES\n//===========================================\nimport React, { Component } from \"react\";\nimport Slide from \"./Slide\";\nimport Dots from \"./Dots\";\n\n//===========================================\n// CREATE STYLES OBJECT\n//===========================================\nconst s = {\n    container: \"fullW fullH rel overflowH\",\n    onScreen: \"left0\",\n    offScreenRight: \"left100vw\",\n    offScreenLeft: \"leftM100vw\",\n    transition: \"transition1l\"\n};\n\n//===========================================\n// SLIDESHOW COMPONENT\n//===========================================\nclass Slideshow extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            slide1: {\n                id: 0,\n                position: s.onScreen,\n                transition: true\n            },\n            slide2: {\n                id: 1,\n                position: s.offScreenRight,\n                transition: true\n            },\n            currentId: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startCarousel();\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.carouselInterval);\n    }\n\n    startCarousel = () => {\n        this.carouselInterval = setInterval(() => {\n            this.transitionSlides();\n        }, 20000);\n    };\n\n    setSlideState = (slide1, slide2, currentId) => {\n        this.setState({\n            slide1: slide1,\n            slide2: slide2,\n            currentId: currentId\n        });\n    };\n\n    transitionSlides = () => {\n        const { slide1, slide2 } = this.state;\n        let currentId;\n        if (slide1[\"position\"] === s.onScreen) {\n            slide1[\"position\"] = s.offScreenLeft;\n            slide2[\"position\"] = s.onScreen;\n            currentId = slide2.id;\n        } else {\n            slide1[\"position\"] = s.onScreen;\n            slide2[\"position\"] = s.offScreenLeft;\n            currentId = slide1.id;\n        }\n        this.setSlideState(slide1, slide2, currentId);\n        setTimeout(() => {\n            this.resetSlideOffScreen();\n        }, 1000);\n    };\n\n    resetSlideOffScreen = () => {\n        const { slide1, slide2, currentId } = this.state;\n        const { slides } = this.props;\n        if (slide1[\"position\"] === s.offScreenLeft) {\n            slide1[\"transition\"] = false;\n            slide1[\"position\"] = s.offScreenRight;\n            slide1[\"id\"] = slide2.id + 1 === slides.length ? 0 : slide2.id + 1;\n        } else {\n            slide2[\"transition\"] = false;\n            slide2[\"position\"] = s.offScreenRight;\n            slide2[\"id\"] = slide1.id + 1 === slides.length ? 0 : slide1.id + 1;\n        }\n        this.setSlideState(slide1, slide2, currentId);\n        this.resetSlideTransitions(slide1, slide2, currentId);\n    };\n\n    resetSlideTransitions = (slide1, slide2, currentId) => {\n        setTimeout(() => {\n            slide1[\"transition\"] = true;\n            slide2[\"transition\"] = true;\n            this.setSlideState(slide1, slide2, currentId);\n        }, 500);\n    };\n\n    render() {\n        const { slide1, slide2, currentId } = this.state;\n        const { slides } = this.props;\n        return (\n            <div className={s.container}>\n                <Slide\n                    image={slides[slide1.id]}\n                    position={slide1.position}\n                    transition={slide1.transition ? s.transition : \"\"}\n                />\n                <Slide\n                    image={slides[slide2.id]}\n                    position={slide2.position}\n                    transition={slide2.transition ? s.transition : \"\"}\n                />\n                <Dots slideId={currentId} slides={slides} />\n            </div>\n        );\n    }\n}\n\nexport default Slideshow;\n","//===========================================\n// IMPORT DEPENDENCIES\n//===========================================\nimport React, { Component } from \"react\";\nimport Slideshow from \"./Slideshow\";\nimport text2png from 'text2png';\nimport slide1 from \"./assets/slide1.jpg\";\nimport slide2 from \"./assets/slide2.jpg\";\nimport slide3 from \"./assets/slide3.jpg\";\nimport slide4 from \"./assets/slide4.jpg\";\nimport slide5 from \"./assets/slide5.jpg\";\n\n//===========================================\n// CREATE STYLES OBJECT\n//===========================================\nconst s = {\n    container: \"screenW screenH dGray col\",\n    header: \"flex1 fCenter fSize2\",\n    main: \"flex8 white\",\n    footer: \"flex1 fCenter\"\n};\n\n//===========================================\n// SLIDES DATA\n//===========================================\nconst slides = [\n    text2png('Hello!', {color: 'blue'}),\n    text2png('Hi!', {color: 'red'}),\n    text2png('Whats up!', {color: 'green'}),\n    text2png('yo!', {color: 'yellow'}),\n    slide5];\n\n//===========================================\n// APP COMPONENT\n//===========================================\nclass App extends Component {\n    render() {\n        return (\n            <div className={s.container}>\n                <div className={s.header}>Innovation Lab</div>\n                <div className={s.main}>\n                    <Slideshow slides={slides} />\n                </div>\n                <div className={s.footer}>Built by Chicago DPE </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./custom.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}